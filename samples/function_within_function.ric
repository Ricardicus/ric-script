# In this language, everything is in a global
# namespace. Even function declarations.
# Functions can be defined multiple times

@ foo (a) {
  # Defining a function within a function
  # will actually make it globally available

  print("foo")

  ? [ a ] {
    # But only if the code is executed
    @ bar () {
      print("bar")
    }
  } ~ {
    # If a function is defined again, it is
    # overwritten
    @ bar () {
      print("not bar")
    }
  }
}

# Will print:
# foo
# not bar
foo(0)
bar()

# Will print:
# foo
# bar
foo(1)
bar()

# Overwriting a function (extreme example)
@ hejsan () {

  print("hejsan")
  @ hejsan () {
    print("tjenare")
  }

  hejsan()
}

# Will print:
# hejsan
# tjenare

hejsan()
